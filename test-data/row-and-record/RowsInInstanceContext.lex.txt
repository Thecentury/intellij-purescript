module ('module')
WHITE_SPACE (' ')
proper name ('Main')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE ('\n\n')
layout start ('')
import ('import')
WHITE_SPACE (' ')
proper name ('Prelude')
WHITE_SPACE ('\n')
layout separator ('')
import ('import')
WHITE_SPACE (' ')
module prefix ('Control.Monad.')
proper name ('Eff')
WHITE_SPACE (' ')
( ('(')
proper name ('Eff')
) (')')
WHITE_SPACE ('\n')
layout separator ('')
import ('import')
WHITE_SPACE (' ')
module prefix ('Control.Monad.Eff.')
proper name ('Console')
WHITE_SPACE (' ')
( ('(')
proper name ('CONSOLE')
, (',')
WHITE_SPACE (' ')
identifier ('log')
) (')')
WHITE_SPACE ('\n')
layout separator ('')
import ('import')
WHITE_SPACE (' ')
module prefix ('Data.')
proper name ('Newtype')
WHITE_SPACE (' ')
( ('(')
class ('class')
WHITE_SPACE (' ')
proper name ('Newtype')
, (',')
WHITE_SPACE (' ')
identifier ('unwrap')
) (')')
WHITE_SPACE ('\n\n')
layout separator ('')
class ('class')
WHITE_SPACE (' ')
proper name ('TypeEquals')
WHITE_SPACE (' ')
identifier ('a')
WHITE_SPACE (' ')
identifier ('b')
WHITE_SPACE (' ')
| ('|')
WHITE_SPACE (' ')
identifier ('a')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
identifier ('b')
, (',')
WHITE_SPACE (' ')
identifier ('b')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
identifier ('a')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE ('\n  ')
layout start ('')
identifier ('coerce')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
identifier ('a')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
identifier ('b')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('coerceBack')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
identifier ('b')
WHITE_SPACE (' ')
-> ('->')
WHITE_SPACE (' ')
identifier ('a')
layout end ('')
WHITE_SPACE ('\n\n')
layout separator ('')
instance ('instance')
WHITE_SPACE (' ')
identifier ('refl')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('TypeEquals')
WHITE_SPACE (' ')
identifier ('a')
WHITE_SPACE (' ')
identifier ('a')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE ('\n  ')
layout start ('')
identifier ('coerce')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('id')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('coerceBack')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('id')
layout end ('')
WHITE_SPACE ('\n\n')
layout separator ('')
newtype ('newtype')
WHITE_SPACE (' ')
proper name ('RecordNewtype')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
proper name ('RecordNewtype')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('String')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n\n')
layout separator ('')
instance ('instance')
WHITE_SPACE (' ')
identifier ('newtypeRecordNewtype')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE ('\n  ')
proper name ('TypeEquals')
WHITE_SPACE (' ')
identifier ('inner')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('String')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n    ')
=> ('=>')
WHITE_SPACE (' ')
proper name ('Newtype')
WHITE_SPACE (' ')
proper name ('RecordNewtype')
WHITE_SPACE (' ')
identifier ('inner')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE ('\n  ')
layout start ('')
identifier ('wrap')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
proper name ('RecordNewtype')
WHITE_SPACE (' ')
operator ('<<<')
WHITE_SPACE (' ')
identifier ('coerce')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('unwrap')
WHITE_SPACE (' ')
( ('(')
proper name ('RecordNewtype')
WHITE_SPACE (' ')
identifier ('rec')
) (')')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('coerceBack')
WHITE_SPACE (' ')
identifier ('rec')
layout end ('')
WHITE_SPACE ('\n\n')
layout separator ('')
identifier ('main')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Eff')
WHITE_SPACE (' ')
( ('(')
identifier ('console')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('CONSOLE')
) (')')
WHITE_SPACE (' ')
proper name ('Unit')
WHITE_SPACE ('\n')
layout separator ('')
identifier ('main')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('log')
WHITE_SPACE (' ')
( ('(')
identifier ('unwrap')
WHITE_SPACE (' ')
( ('(')
proper name ('RecordNewtype')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
string ('"Done"')
WHITE_SPACE (' ')
} ('}')
) (')')
) (')')
. ('.')
identifier ('x')
layout end ('')
