module ('module')
WHITE_SPACE (' ')
proper name ('Main')
WHITE_SPACE (' ')
where ('where')
WHITE_SPACE ('\n\n')
layout start ('')
import ('import')
WHITE_SPACE (' ')
proper name ('Prelude')
WHITE_SPACE ('\n')
layout separator ('')
import ('import')
WHITE_SPACE (' ')
module prefix ('Control.Monad.')
proper name ('Eff')
WHITE_SPACE ('\n')
layout separator ('')
import ('import')
WHITE_SPACE (' ')
module prefix ('Control.Monad.Eff.')
proper name ('Console')
WHITE_SPACE ('\n\n')
layout separator ('')
foreign ('foreign')
WHITE_SPACE (' ')
import ('import')
WHITE_SPACE (' ')
identifier ('merge')
WHITE_SPACE ('\n  ')
:: ('::')
WHITE_SPACE (' ')
forall ('forall')
WHITE_SPACE (' ')
identifier ('r1')
WHITE_SPACE (' ')
identifier ('r2')
WHITE_SPACE (' ')
identifier ('r3')
WHITE_SPACE ('\n   ')
. ('.')
WHITE_SPACE (' ')
proper name ('Union')
WHITE_SPACE (' ')
identifier ('r1')
WHITE_SPACE (' ')
identifier ('r2')
WHITE_SPACE (' ')
identifier ('r3')
WHITE_SPACE ('\n  ')
=> ('=>')
WHITE_SPACE (' ')
proper name ('Record')
WHITE_SPACE (' ')
identifier ('r1')
WHITE_SPACE ('\n  ')
-> ('->')
WHITE_SPACE (' ')
proper name ('Record')
WHITE_SPACE (' ')
identifier ('r2')
WHITE_SPACE ('\n  ')
-> ('->')
WHITE_SPACE (' ')
proper name ('Record')
WHITE_SPACE (' ')
identifier ('r3')
WHITE_SPACE ('\n\n')
layout separator ('')
identifier ('test1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('merge')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('1')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('y')
operator (':')
WHITE_SPACE (' ')
true ('true')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n\n')
layout separator ('')
identifier ('test2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('merge')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('1')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
true ('true')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n\n')
layout separator ('')
identifier ('mergeWithExtras')
WHITE_SPACE ('\n ')
:: ('::')
WHITE_SPACE (' ')
forall ('forall')
WHITE_SPACE (' ')
identifier ('r1')
WHITE_SPACE (' ')
identifier ('r2')
WHITE_SPACE (' ')
identifier ('r3')
WHITE_SPACE ('\n  ')
. ('.')
WHITE_SPACE (' ')
proper name ('Union')
WHITE_SPACE (' ')
identifier ('r1')
WHITE_SPACE (' ')
( ('(')
identifier ('y')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Boolean')
WHITE_SPACE (' ')
| ('|')
WHITE_SPACE (' ')
identifier ('r2')
) (')')
WHITE_SPACE (' ')
( ('(')
identifier ('y')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Boolean')
WHITE_SPACE (' ')
| ('|')
WHITE_SPACE (' ')
identifier ('r3')
) (')')
WHITE_SPACE ('\n ')
=> ('=>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
WHITE_SPACE (' ')
| ('|')
WHITE_SPACE (' ')
identifier ('r1')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n ')
-> ('->')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('y')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Boolean')
WHITE_SPACE (' ')
| ('|')
WHITE_SPACE (' ')
identifier ('r2')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n ')
-> ('->')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
, (',')
WHITE_SPACE (' ')
identifier ('y')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Boolean')
WHITE_SPACE (' ')
| ('|')
WHITE_SPACE (' ')
identifier ('r3')
} ('}')
WHITE_SPACE ('\n')
layout separator ('')
identifier ('mergeWithExtras')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('merge')
WHITE_SPACE ('\n\n')
layout separator ('')
identifier ('test3')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('merge')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('1')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE ('\n')
layout separator ('')
identifier ('test3'')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('merge')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('1')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n\n')
layout separator ('')
type ('type')
WHITE_SPACE (' ')
proper name ('Mandatory')
WHITE_SPACE (' ')
identifier ('r')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
( ('(')
identifier ('x')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
WHITE_SPACE (' ')
| ('|')
WHITE_SPACE (' ')
identifier ('r')
) (')')
WHITE_SPACE ('\n')
layout separator ('')
type ('type')
WHITE_SPACE (' ')
proper name ('Optional')
WHITE_SPACE (' ')
identifier ('r')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
( ('(')
identifier ('x')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
, (',')
WHITE_SPACE (' ')
identifier ('y')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
, (',')
WHITE_SPACE (' ')
identifier ('z')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
WHITE_SPACE (' ')
| ('|')
WHITE_SPACE (' ')
identifier ('r')
) (')')
WHITE_SPACE ('\n\n')
layout separator ('')
identifier ('withDefaults')
WHITE_SPACE ('\n  ')
:: ('::')
WHITE_SPACE (' ')
forall ('forall')
WHITE_SPACE (' ')
identifier ('r')
WHITE_SPACE (' ')
identifier ('s')
WHITE_SPACE ('\n   ')
. ('.')
WHITE_SPACE (' ')
proper name ('Union')
WHITE_SPACE (' ')
identifier ('r')
WHITE_SPACE (' ')
( ('(')
identifier ('y')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
, (',')
WHITE_SPACE (' ')
identifier ('z')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
) (')')
WHITE_SPACE (' ')
( ('(')
identifier ('y')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
, (',')
WHITE_SPACE (' ')
identifier ('z')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
WHITE_SPACE (' ')
| ('|')
WHITE_SPACE (' ')
identifier ('s')
) (')')
WHITE_SPACE ('\n  ')
=> ('=>')
WHITE_SPACE (' ')
proper name ('Record')
WHITE_SPACE (' ')
( ('(')
proper name ('Mandatory')
WHITE_SPACE (' ')
identifier ('r')
) (')')
WHITE_SPACE ('\n  ')
-> ('->')
WHITE_SPACE (' ')
proper name ('Record')
WHITE_SPACE (' ')
( ('(')
proper name ('Optional')
WHITE_SPACE (' ')
identifier ('s')
) (')')
WHITE_SPACE ('\n')
layout separator ('')
identifier ('withDefaults')
WHITE_SPACE (' ')
identifier ('p')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('merge')
WHITE_SPACE (' ')
identifier ('p')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('y')
operator (':')
WHITE_SPACE (' ')
natural ('1')
, (',')
WHITE_SPACE (' ')
identifier ('z')
operator (':')
WHITE_SPACE (' ')
natural ('1')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n\n')
layout separator ('')
identifier ('withDefaultsClosed')
WHITE_SPACE ('\n  ')
:: ('::')
WHITE_SPACE (' ')
forall ('forall')
WHITE_SPACE (' ')
identifier ('r')
WHITE_SPACE (' ')
identifier ('s')
WHITE_SPACE ('\n   ')
. ('.')
WHITE_SPACE (' ')
proper name ('Union')
WHITE_SPACE (' ')
identifier ('r')
WHITE_SPACE (' ')
( ('(')
identifier ('y')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
, (',')
WHITE_SPACE (' ')
identifier ('z')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
) (')')
WHITE_SPACE (' ')
( ('(')
identifier ('y')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
, (',')
WHITE_SPACE (' ')
identifier ('z')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
WHITE_SPACE (' ')
| ('|')
WHITE_SPACE (' ')
identifier ('s')
) (')')
WHITE_SPACE ('\n  ')
=> ('=>')
WHITE_SPACE (' ')
proper name ('Subrow')
WHITE_SPACE (' ')
identifier ('s')
WHITE_SPACE (' ')
( ('(')
identifier ('y')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
, (',')
WHITE_SPACE (' ')
identifier ('z')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Int')
) (')')
WHITE_SPACE ('\n  ')
=> ('=>')
WHITE_SPACE (' ')
proper name ('Record')
WHITE_SPACE (' ')
( ('(')
proper name ('Mandatory')
WHITE_SPACE (' ')
identifier ('r')
) (')')
WHITE_SPACE ('\n  ')
-> ('->')
WHITE_SPACE (' ')
proper name ('Record')
WHITE_SPACE (' ')
( ('(')
proper name ('Optional')
WHITE_SPACE (' ')
identifier ('s')
) (')')
WHITE_SPACE ('\n')
layout separator ('')
identifier ('withDefaultsClosed')
WHITE_SPACE (' ')
identifier ('p')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('merge')
WHITE_SPACE (' ')
identifier ('p')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('y')
operator (':')
WHITE_SPACE (' ')
natural ('1')
, (',')
WHITE_SPACE (' ')
identifier ('z')
operator (':')
WHITE_SPACE (' ')
natural ('1')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n\n')
layout separator ('')
identifier ('test4')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('withDefaults')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('1')
, (',')
WHITE_SPACE (' ')
identifier ('y')
operator (':')
WHITE_SPACE (' ')
natural ('2')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n\n-- r is a subrow of s if Union r t s for some t.\n')
layout separator ('')
class ('class')
WHITE_SPACE (' ')
proper name ('Subrow')
WHITE_SPACE (' ')
( ('(')
identifier ('r')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Row')
WHITE_SPACE (' ')
proper name ('Type')
) (')')
WHITE_SPACE (' ')
( ('(')
identifier ('s')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Row')
WHITE_SPACE (' ')
proper name ('Type')
) (')')
WHITE_SPACE ('\n')
layout separator ('')
instance ('instance')
WHITE_SPACE (' ')
identifier ('subrow')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Union')
WHITE_SPACE (' ')
identifier ('r')
WHITE_SPACE (' ')
identifier ('t')
WHITE_SPACE (' ')
identifier ('s')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
proper name ('Subrow')
WHITE_SPACE (' ')
identifier ('r')
WHITE_SPACE (' ')
identifier ('s')
WHITE_SPACE ('\n\n')
layout separator ('')
identifier ('main')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('Eff')
WHITE_SPACE (' ')
( ('(')
identifier ('console')
WHITE_SPACE (' ')
:: ('::')
WHITE_SPACE (' ')
proper name ('CONSOLE')
) (')')
WHITE_SPACE (' ')
proper name ('Unit')
WHITE_SPACE ('\n')
layout separator ('')
identifier ('main')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
do ('do')
WHITE_SPACE ('\n  ')
layout start ('')
identifier ('logShow')
WHITE_SPACE (' ')
identifier ('test1')
. ('.')
identifier ('x')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('logShow')
WHITE_SPACE (' ')
identifier ('test1')
. ('.')
identifier ('y')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('logShow')
WHITE_SPACE (' ')
( ('(')
identifier ('test1')
. ('.')
identifier ('x')
WHITE_SPACE (' ')
operator ('==')
WHITE_SPACE (' ')
natural ('1')
) (')')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('logShow')
WHITE_SPACE (' ')
( ('(')
identifier ('mergeWithExtras')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('1')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('0')
, (',')
WHITE_SPACE (' ')
identifier ('y')
operator (':')
WHITE_SPACE (' ')
true ('true')
, (',')
WHITE_SPACE (' ')
identifier ('z')
operator (':')
WHITE_SPACE (' ')
float ('42.0')
WHITE_SPACE (' ')
} ('}')
) (')')
. ('.')
identifier ('x')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('logShow')
WHITE_SPACE (' ')
( ('(')
identifier ('withDefaults')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('1')
WHITE_SPACE (' ')
} ('}')
) (')')
. ('.')
identifier ('x')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('logShow')
WHITE_SPACE (' ')
( ('(')
identifier ('withDefaults')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('1')
WHITE_SPACE (' ')
} ('}')
) (')')
. ('.')
identifier ('y')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('logShow')
WHITE_SPACE (' ')
( ('(')
identifier ('withDefaults')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('1')
WHITE_SPACE (' ')
} ('}')
) (')')
. ('.')
identifier ('z')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('logShow')
WHITE_SPACE (' ')
( ('(')
identifier ('withDefaults')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('1')
, (',')
WHITE_SPACE (' ')
identifier ('y')
operator (':')
WHITE_SPACE (' ')
natural ('2')
WHITE_SPACE (' ')
} ('}')
) (')')
. ('.')
identifier ('x')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('logShow')
WHITE_SPACE (' ')
( ('(')
identifier ('withDefaults')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('1')
, (',')
WHITE_SPACE (' ')
identifier ('y')
operator (':')
WHITE_SPACE (' ')
natural ('2')
WHITE_SPACE (' ')
} ('}')
) (')')
. ('.')
identifier ('y')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('logShow')
WHITE_SPACE (' ')
( ('(')
identifier ('withDefaults')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('1')
, (',')
WHITE_SPACE (' ')
identifier ('y')
operator (':')
WHITE_SPACE (' ')
natural ('2')
WHITE_SPACE (' ')
} ('}')
) (')')
. ('.')
identifier ('z')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('logShow')
WHITE_SPACE (' ')
( ('(')
identifier ('withDefaultsClosed')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('1')
, (',')
WHITE_SPACE (' ')
identifier ('y')
operator (':')
WHITE_SPACE (' ')
natural ('2')
WHITE_SPACE (' ')
} ('}')
) (')')
. ('.')
identifier ('x')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('logShow')
WHITE_SPACE (' ')
( ('(')
identifier ('withDefaultsClosed')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('1')
, (',')
WHITE_SPACE (' ')
identifier ('y')
operator (':')
WHITE_SPACE (' ')
natural ('2')
WHITE_SPACE (' ')
} ('}')
) (')')
. ('.')
identifier ('y')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('logShow')
WHITE_SPACE (' ')
( ('(')
identifier ('withDefaultsClosed')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('x')
operator (':')
WHITE_SPACE (' ')
natural ('1')
, (',')
WHITE_SPACE (' ')
identifier ('y')
operator (':')
WHITE_SPACE (' ')
natural ('2')
WHITE_SPACE (' ')
} ('}')
) (')')
. ('.')
identifier ('z')
WHITE_SPACE ('\n  ')
layout separator ('')
identifier ('log')
WHITE_SPACE (' ')
string ('"Done"')
layout end ('')
layout end ('')
